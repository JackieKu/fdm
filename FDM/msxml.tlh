// Created by Microsoft (R) C/C++ Compiler Version 12.00.8447.0 (0040f943).
//
// msxml.tlh
//
// C++ source equivalent of Win32 type library msxml.dll
// compiler-generated file created 12/07/05 at 19:56:39 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace MSXML {

//
// Forward references and typedefs
//

struct __declspec(uuid("2933bf8f-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMImplementation;
struct __declspec(uuid("2933bf80-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMNode;
typedef enum tagDOMNodeType DOMNodeType;
struct __declspec(uuid("2933bf82-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMNodeList;
struct __declspec(uuid("2933bf83-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMNamedNodeMap;
struct __declspec(uuid("2933bf81-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMDocument;
struct __declspec(uuid("2933bf8b-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMDocumentType;
struct __declspec(uuid("2933bf86-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMElement;
struct __declspec(uuid("2933bf85-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMAttribute;
struct __declspec(uuid("3efaa413-272f-11d2-836f-0000f87a7782"))
/* dual interface */ IXMLDOMDocumentFragment;
struct __declspec(uuid("2933bf87-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMText;
struct __declspec(uuid("2933bf84-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMCharacterData;
struct __declspec(uuid("2933bf88-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMComment;
struct __declspec(uuid("2933bf8a-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMCDATASection;
struct __declspec(uuid("2933bf89-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMProcessingInstruction;
struct __declspec(uuid("2933bf8e-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMEntityReference;
struct __declspec(uuid("3efaa426-272f-11d2-836f-0000f87a7782"))
/* dual interface */ IXMLDOMParseError;
struct __declspec(uuid("2933bf8c-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMNotation;
struct __declspec(uuid("2933bf8d-7b36-11d2-b20e-00c04f983e60"))
/* dual interface */ IXMLDOMEntity;
struct __declspec(uuid("3efaa425-272f-11d2-836f-0000f87a7782"))
/* dual interface */ IXTLRuntime;
struct __declspec(uuid("3efaa427-272f-11d2-836f-0000f87a7782"))
/* dispinterface */ XMLDOMDocumentEvents;
struct /* coclass */ DOMDocument;
struct /* coclass */ DOMFreeThreadedDocument;
struct __declspec(uuid("ed8c108d-4349-11d2-91a4-00c04f7969e8"))
/* dual interface */ IXMLHttpRequest;
struct /* coclass */ XMLHTTPRequest;
struct __declspec(uuid("310afa62-0575-11d2-9ca9-0060b0ec3d39"))
/* dual interface */ IXMLDSOControl;
struct /* coclass */ XMLDSOControl;
struct __declspec(uuid("65725580-9b5d-11d0-9bfe-00c04fc99c8e"))
/* dual interface */ IXMLElementCollection;
struct __declspec(uuid("f52e2b61-18a1-11d1-b105-00805f49916b"))
/* dual interface */ IXMLDocument;
struct __declspec(uuid("3f7f31ac-e15f-11d0-9c25-00c04fc99c8e"))
/* dual interface */ IXMLElement;
struct __declspec(uuid("2b8de2fe-8d2d-11d1-b2fc-00c04fd915a9"))
/* interface */ IXMLDocument2;
struct __declspec(uuid("2b8de2ff-8d2d-11d1-b2fc-00c04fd915a9"))
/* dual interface */ IXMLElement2;
struct __declspec(uuid("d4d4a0fc-3b73-11d1-b2b4-00c04fb92596"))
/* dual interface */ IXMLAttribute;
struct __declspec(uuid("948c5ad3-c58d-11d0-9c0b-00c04fc99c8e"))
/* interface */ IXMLError;
struct _xml_error;
typedef enum tagXMLEMEM_TYPE XMLELEM_TYPE;
struct /* coclass */ XMLDocument;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IXMLDOMImplementation, __uuidof(IXMLDOMImplementation));
_COM_SMARTPTR_TYPEDEF(IXMLDOMNode, __uuidof(IXMLDOMNode));
_COM_SMARTPTR_TYPEDEF(IXMLDOMNodeList, __uuidof(IXMLDOMNodeList));
_COM_SMARTPTR_TYPEDEF(IXMLDOMNamedNodeMap, __uuidof(IXMLDOMNamedNodeMap));
_COM_SMARTPTR_TYPEDEF(IXMLDOMDocument, __uuidof(IXMLDOMDocument));
_COM_SMARTPTR_TYPEDEF(IXMLDOMDocumentType, __uuidof(IXMLDOMDocumentType));
_COM_SMARTPTR_TYPEDEF(IXMLDOMElement, __uuidof(IXMLDOMElement));
_COM_SMARTPTR_TYPEDEF(IXMLDOMAttribute, __uuidof(IXMLDOMAttribute));
_COM_SMARTPTR_TYPEDEF(IXMLDOMDocumentFragment, __uuidof(IXMLDOMDocumentFragment));
_COM_SMARTPTR_TYPEDEF(IXMLDOMCharacterData, __uuidof(IXMLDOMCharacterData));
_COM_SMARTPTR_TYPEDEF(IXMLDOMText, __uuidof(IXMLDOMText));
_COM_SMARTPTR_TYPEDEF(IXMLDOMComment, __uuidof(IXMLDOMComment));
_COM_SMARTPTR_TYPEDEF(IXMLDOMCDATASection, __uuidof(IXMLDOMCDATASection));
_COM_SMARTPTR_TYPEDEF(IXMLDOMProcessingInstruction, __uuidof(IXMLDOMProcessingInstruction));
_COM_SMARTPTR_TYPEDEF(IXMLDOMEntityReference, __uuidof(IXMLDOMEntityReference));
_COM_SMARTPTR_TYPEDEF(IXMLDOMParseError, __uuidof(IXMLDOMParseError));
_COM_SMARTPTR_TYPEDEF(IXMLDOMNotation, __uuidof(IXMLDOMNotation));
_COM_SMARTPTR_TYPEDEF(IXMLDOMEntity, __uuidof(IXMLDOMEntity));
_COM_SMARTPTR_TYPEDEF(IXTLRuntime, __uuidof(IXTLRuntime));
_COM_SMARTPTR_TYPEDEF(XMLDOMDocumentEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(IXMLHttpRequest, __uuidof(IXMLHttpRequest));
_COM_SMARTPTR_TYPEDEF(IXMLDSOControl, __uuidof(IXMLDSOControl));
_COM_SMARTPTR_TYPEDEF(IXMLElementCollection, __uuidof(IXMLElementCollection));
_COM_SMARTPTR_TYPEDEF(IXMLDocument, __uuidof(IXMLDocument));
_COM_SMARTPTR_TYPEDEF(IXMLElement, __uuidof(IXMLElement));
_COM_SMARTPTR_TYPEDEF(IXMLDocument2, __uuidof(IXMLDocument2));
_COM_SMARTPTR_TYPEDEF(IXMLElement2, __uuidof(IXMLElement2));
_COM_SMARTPTR_TYPEDEF(IXMLAttribute, __uuidof(IXMLAttribute));
_COM_SMARTPTR_TYPEDEF(IXMLError, __uuidof(IXMLError));

//
// Type library items
//

struct __declspec(uuid("2933bf8f-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMImplementation : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL hasFeature (
        _bstr_t feature,
        _bstr_t version );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_hasFeature (
        BSTR feature,
        BSTR version,
        VARIANT_BOOL * hasFeature ) = 0;
};

struct __declspec(uuid("2933bf80-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMNode : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetnodeName))
    _bstr_t nodeName;
    __declspec(property(get=GetnodeValue,put=PutnodeValue))
    _variant_t nodeValue;
    __declspec(property(get=GetnodeType))
    DOMNodeType nodeType;
    __declspec(property(get=GetparentNode))
    IXMLDOMNodePtr parentNode;
    __declspec(property(get=GetchildNodes))
    IXMLDOMNodeListPtr childNodes;
    __declspec(property(get=GetfirstChild))
    IXMLDOMNodePtr firstChild;
    __declspec(property(get=GetlastChild))
    IXMLDOMNodePtr lastChild;
    __declspec(property(get=GetpreviousSibling))
    IXMLDOMNodePtr previousSibling;
    __declspec(property(get=GetnextSibling))
    IXMLDOMNodePtr nextSibling;
    __declspec(property(get=Getattributes))
    IXMLDOMNamedNodeMapPtr attributes;
    __declspec(property(get=GetownerDocument))
    IXMLDOMDocumentPtr ownerDocument;
    __declspec(property(get=GetnodeTypeString))
    _bstr_t nodeTypeString;
    __declspec(property(get=Getspecified))
    VARIANT_BOOL specified;
    __declspec(property(get=Getdefinition))
    IXMLDOMNodePtr definition;
    __declspec(property(get=Gettext,put=Puttext))
    _bstr_t text;
    __declspec(property(get=GetnodeTypedValue,put=PutnodeTypedValue))
    _variant_t nodeTypedValue;
    __declspec(property(get=Getxml))
    _bstr_t xml;
    __declspec(property(get=Getparsed))
    VARIANT_BOOL parsed;
    __declspec(property(get=GetnamespaceURI))
    _bstr_t namespaceURI;
    __declspec(property(get=Getprefix))
    _bstr_t prefix;
    __declspec(property(get=GetbaseName))
    _bstr_t baseName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetnodeName ( );
    _variant_t GetnodeValue ( );
    void PutnodeValue (
        const _variant_t & value );
    DOMNodeType GetnodeType ( );
    IXMLDOMNodePtr GetparentNode ( );
    IXMLDOMNodeListPtr GetchildNodes ( );
    IXMLDOMNodePtr GetfirstChild ( );
    IXMLDOMNodePtr GetlastChild ( );
    IXMLDOMNodePtr GetpreviousSibling ( );
    IXMLDOMNodePtr GetnextSibling ( );
    IXMLDOMNamedNodeMapPtr Getattributes ( );
    IXMLDOMNodePtr insertBefore (
        struct IXMLDOMNode * newChild,
        const _variant_t & refChild );
    IXMLDOMNodePtr replaceChild (
        struct IXMLDOMNode * newChild,
        struct IXMLDOMNode * oldChild );
    IXMLDOMNodePtr removeChild (
        struct IXMLDOMNode * childNode );
    IXMLDOMNodePtr appendChild (
        struct IXMLDOMNode * newChild );
    VARIANT_BOOL hasChildNodes ( );
    IXMLDOMDocumentPtr GetownerDocument ( );
    IXMLDOMNodePtr cloneNode (
        VARIANT_BOOL deep );
    _bstr_t GetnodeTypeString ( );
    _bstr_t Gettext ( );
    void Puttext (
        _bstr_t text );
    VARIANT_BOOL Getspecified ( );
    IXMLDOMNodePtr Getdefinition ( );
    _variant_t GetnodeTypedValue ( );
    void PutnodeTypedValue (
        const _variant_t & typedValue );
    _variant_t GetdataType ( );
    void PutdataType (
        _bstr_t dataTypeName );
    _bstr_t Getxml ( );
    _bstr_t transformNode (
        struct IXMLDOMNode * stylesheet );
    IXMLDOMNodeListPtr selectNodes (
        _bstr_t queryString );
    IXMLDOMNodePtr selectSingleNode (
        _bstr_t queryString );
    VARIANT_BOOL Getparsed ( );
    _bstr_t GetnamespaceURI ( );
    _bstr_t Getprefix ( );
    _bstr_t GetbaseName ( );
    HRESULT transformNodeToObject (
        struct IXMLDOMNode * stylesheet,
        const _variant_t & outputObject );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_nodeName (
        BSTR * name ) = 0;
    virtual HRESULT __stdcall get_nodeValue (
        VARIANT * value ) = 0;
    virtual HRESULT __stdcall put_nodeValue (
        VARIANT value ) = 0;
    virtual HRESULT __stdcall get_nodeType (
        DOMNodeType * type ) = 0;
    virtual HRESULT __stdcall get_parentNode (
        struct IXMLDOMNode * * parent ) = 0;
    virtual HRESULT __stdcall get_childNodes (
        struct IXMLDOMNodeList * * childList ) = 0;
    virtual HRESULT __stdcall get_firstChild (
        struct IXMLDOMNode * * firstChild ) = 0;
    virtual HRESULT __stdcall get_lastChild (
        struct IXMLDOMNode * * lastChild ) = 0;
    virtual HRESULT __stdcall get_previousSibling (
        struct IXMLDOMNode * * previousSibling ) = 0;
    virtual HRESULT __stdcall get_nextSibling (
        struct IXMLDOMNode * * nextSibling ) = 0;
    virtual HRESULT __stdcall get_attributes (
        struct IXMLDOMNamedNodeMap * * attributeMap ) = 0;
    virtual HRESULT __stdcall raw_insertBefore (
        struct IXMLDOMNode * newChild,
        VARIANT refChild,
        struct IXMLDOMNode * * outNewChild ) = 0;
    virtual HRESULT __stdcall raw_replaceChild (
        struct IXMLDOMNode * newChild,
        struct IXMLDOMNode * oldChild,
        struct IXMLDOMNode * * outOldChild ) = 0;
    virtual HRESULT __stdcall raw_removeChild (
        struct IXMLDOMNode * childNode,
        struct IXMLDOMNode * * oldChild ) = 0;
    virtual HRESULT __stdcall raw_appendChild (
        struct IXMLDOMNode * newChild,
        struct IXMLDOMNode * * outNewChild ) = 0;
    virtual HRESULT __stdcall raw_hasChildNodes (
        VARIANT_BOOL * hasChild ) = 0;
    virtual HRESULT __stdcall get_ownerDocument (
        struct IXMLDOMDocument * * DOMDocument ) = 0;
    virtual HRESULT __stdcall raw_cloneNode (
        VARIANT_BOOL deep,
        struct IXMLDOMNode * * cloneRoot ) = 0;
    virtual HRESULT __stdcall get_nodeTypeString (
        BSTR * nodeType ) = 0;
    virtual HRESULT __stdcall get_text (
        BSTR * text ) = 0;
    virtual HRESULT __stdcall put_text (
        BSTR text ) = 0;
    virtual HRESULT __stdcall get_specified (
        VARIANT_BOOL * isSpecified ) = 0;
    virtual HRESULT __stdcall get_definition (
        struct IXMLDOMNode * * definitionNode ) = 0;
    virtual HRESULT __stdcall get_nodeTypedValue (
        VARIANT * typedValue ) = 0;
    virtual HRESULT __stdcall put_nodeTypedValue (
        VARIANT typedValue ) = 0;
    virtual HRESULT __stdcall get_dataType (
        VARIANT * dataTypeName ) = 0;
    virtual HRESULT __stdcall put_dataType (
        BSTR dataTypeName ) = 0;
    virtual HRESULT __stdcall get_xml (
        BSTR * xmlString ) = 0;
    virtual HRESULT __stdcall raw_transformNode (
        struct IXMLDOMNode * stylesheet,
        BSTR * xmlString ) = 0;
    virtual HRESULT __stdcall raw_selectNodes (
        BSTR queryString,
        struct IXMLDOMNodeList * * resultList ) = 0;
    virtual HRESULT __stdcall raw_selectSingleNode (
        BSTR queryString,
        struct IXMLDOMNode * * resultNode ) = 0;
    virtual HRESULT __stdcall get_parsed (
        VARIANT_BOOL * isParsed ) = 0;
    virtual HRESULT __stdcall get_namespaceURI (
        BSTR * namespaceURI ) = 0;
    virtual HRESULT __stdcall get_prefix (
        BSTR * prefixString ) = 0;
    virtual HRESULT __stdcall get_baseName (
        BSTR * nameString ) = 0;
    virtual HRESULT __stdcall raw_transformNodeToObject (
        struct IXMLDOMNode * stylesheet,
        VARIANT outputObject ) = 0;
};

enum tagDOMNodeType
{
    NODE_INVALID = 0,
    NODE_ELEMENT = 1,
    NODE_ATTRIBUTE = 2,
    NODE_TEXT = 3,
    NODE_CDATA_SECTION = 4,
    NODE_ENTITY_REFERENCE = 5,
    NODE_ENTITY = 6,
    NODE_PROCESSING_INSTRUCTION = 7,
    NODE_COMMENT = 8,
    NODE_DOCUMENT = 9,
    NODE_DOCUMENT_TYPE = 10,
    NODE_DOCUMENT_FRAGMENT = 11,
    NODE_NOTATION = 12
};

struct __declspec(uuid("2933bf82-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMNodeList : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getitem))
    IXMLDOMNodePtr item[];
    __declspec(property(get=Getlength))
    long length;
    __declspec(property(get=Get_newEnum))
    IUnknownPtr _newEnum;

    //
    // Wrapper methods for error-handling
    //

    IXMLDOMNodePtr Getitem (
        long index );
    long Getlength ( );
    IXMLDOMNodePtr nextNode ( );
    HRESULT reset ( );
    IUnknownPtr Get_newEnum ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_item (
        long index,
        struct IXMLDOMNode * * listItem ) = 0;
    virtual HRESULT __stdcall get_length (
        long * listLength ) = 0;
    virtual HRESULT __stdcall raw_nextNode (
        struct IXMLDOMNode * * nextItem ) = 0;
    virtual HRESULT __stdcall raw_reset ( ) = 0;
    virtual HRESULT __stdcall get__newEnum (
        IUnknown * * ppUnk ) = 0;
};

struct __declspec(uuid("2933bf83-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMNamedNodeMap : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getitem))
    IXMLDOMNodePtr item[];
    __declspec(property(get=Getlength))
    long length;
    __declspec(property(get=Get_newEnum))
    IUnknownPtr _newEnum;

    //
    // Wrapper methods for error-handling
    //

    IXMLDOMNodePtr getNamedItem (
        _bstr_t name );
    IXMLDOMNodePtr setNamedItem (
        struct IXMLDOMNode * newItem );
    IXMLDOMNodePtr removeNamedItem (
        _bstr_t name );
    IXMLDOMNodePtr Getitem (
        long index );
    long Getlength ( );
    IXMLDOMNodePtr getQualifiedItem (
        _bstr_t baseName,
        _bstr_t namespaceURI );
    IXMLDOMNodePtr removeQualifiedItem (
        _bstr_t baseName,
        _bstr_t namespaceURI );
    IXMLDOMNodePtr nextNode ( );
    HRESULT reset ( );
    IUnknownPtr Get_newEnum ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_getNamedItem (
        BSTR name,
        struct IXMLDOMNode * * namedItem ) = 0;
    virtual HRESULT __stdcall raw_setNamedItem (
        struct IXMLDOMNode * newItem,
        struct IXMLDOMNode * * nameItem ) = 0;
    virtual HRESULT __stdcall raw_removeNamedItem (
        BSTR name,
        struct IXMLDOMNode * * namedItem ) = 0;
    virtual HRESULT __stdcall get_item (
        long index,
        struct IXMLDOMNode * * listItem ) = 0;
    virtual HRESULT __stdcall get_length (
        long * listLength ) = 0;
    virtual HRESULT __stdcall raw_getQualifiedItem (
        BSTR baseName,
        BSTR namespaceURI,
        struct IXMLDOMNode * * qualifiedItem ) = 0;
    virtual HRESULT __stdcall raw_removeQualifiedItem (
        BSTR baseName,
        BSTR namespaceURI,
        struct IXMLDOMNode * * qualifiedItem ) = 0;
    virtual HRESULT __stdcall raw_nextNode (
        struct IXMLDOMNode * * nextItem ) = 0;
    virtual HRESULT __stdcall raw_reset ( ) = 0;
    virtual HRESULT __stdcall get__newEnum (
        IUnknown * * ppUnk ) = 0;
};

struct __declspec(uuid("2933bf81-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMDocument : IXMLDOMNode
{
    //
    // Property data
    //

    __declspec(property(get=GetvalidateOnParse,put=PutvalidateOnParse))
    VARIANT_BOOL validateOnParse;
    __declspec(property(get=GetresolveExternals,put=PutresolveExternals))
    VARIANT_BOOL resolveExternals;
    __declspec(property(get=GetpreserveWhiteSpace,put=PutpreserveWhiteSpace))
    VARIANT_BOOL preserveWhiteSpace;
    __declspec(property(put=Putonreadystatechange))
    _variant_t onreadystatechange;
    __declspec(property(put=Putondataavailable))
    _variant_t ondataavailable;
    __declspec(property(get=Getdoctype))
    IXMLDOMDocumentTypePtr doctype;
    __declspec(property(get=Getimplementation))
    IXMLDOMImplementationPtr implementation;
    __declspec(property(get=GetdocumentElement,put=PutRefdocumentElement))
    IXMLDOMElementPtr documentElement;
    __declspec(property(put=Putontransformnode))
    _variant_t ontransformnode;
    __declspec(property(get=GetreadyState))
    long readyState;
    __declspec(property(get=GetparseError))
    IXMLDOMParseErrorPtr parseError;
    __declspec(property(get=Geturl))
    _bstr_t url;
    __declspec(property(get=Getasync,put=Putasync))
    VARIANT_BOOL async;

    //
    // Wrapper methods for error-handling
    //

    IXMLDOMDocumentTypePtr Getdoctype ( );
    IXMLDOMImplementationPtr Getimplementation ( );
    IXMLDOMElementPtr GetdocumentElement ( );
    void PutRefdocumentElement (
        struct IXMLDOMElement * DOMElement );
    IXMLDOMElementPtr createElement (
        _bstr_t tagName );
    IXMLDOMDocumentFragmentPtr createDocumentFragment ( );
    IXMLDOMTextPtr createTextNode (
        _bstr_t data );
    IXMLDOMCommentPtr createComment (
        _bstr_t data );
    IXMLDOMCDATASectionPtr createCDATASection (
        _bstr_t data );
    IXMLDOMProcessingInstructionPtr createProcessingInstruction (
        _bstr_t target,
        _bstr_t data );
    IXMLDOMAttributePtr createAttribute (
        _bstr_t name );
    IXMLDOMEntityReferencePtr createEntityReference (
        _bstr_t name );
    IXMLDOMNodeListPtr getElementsByTagName (
        _bstr_t tagName );
    IXMLDOMNodePtr createNode (
        const _variant_t & type,
        _bstr_t name,
        _bstr_t namespaceURI );
    IXMLDOMNodePtr nodeFromID (
        _bstr_t idString );
    VARIANT_BOOL load (
        const _variant_t & xmlSource );
    long GetreadyState ( );
    IXMLDOMParseErrorPtr GetparseError ( );
    _bstr_t Geturl ( );
    VARIANT_BOOL Getasync ( );
    void Putasync (
        VARIANT_BOOL isAsync );
    HRESULT abort ( );
    VARIANT_BOOL loadXML (
        _bstr_t bstrXML );
    HRESULT save (
        const _variant_t & destination );
    VARIANT_BOOL GetvalidateOnParse ( );
    void PutvalidateOnParse (
        VARIANT_BOOL isValidating );
    VARIANT_BOOL GetresolveExternals ( );
    void PutresolveExternals (
        VARIANT_BOOL isResolving );
    VARIANT_BOOL GetpreserveWhiteSpace ( );
    void PutpreserveWhiteSpace (
        VARIANT_BOOL isPreserving );
    void Putonreadystatechange (
        const _variant_t & _arg1 );
    void Putondataavailable (
        const _variant_t & _arg1 );
    void Putontransformnode (
        const _variant_t & _arg1 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_doctype (
        struct IXMLDOMDocumentType * * documentType ) = 0;
    virtual HRESULT __stdcall get_implementation (
        struct IXMLDOMImplementation * * impl ) = 0;
    virtual HRESULT __stdcall get_documentElement (
        struct IXMLDOMElement * * DOMElement ) = 0;
    virtual HRESULT __stdcall putref_documentElement (
        struct IXMLDOMElement * DOMElement ) = 0;
    virtual HRESULT __stdcall raw_createElement (
        BSTR tagName,
        struct IXMLDOMElement * * element ) = 0;
    virtual HRESULT __stdcall raw_createDocumentFragment (
        struct IXMLDOMDocumentFragment * * docFrag ) = 0;
    virtual HRESULT __stdcall raw_createTextNode (
        BSTR data,
        struct IXMLDOMText * * text ) = 0;
    virtual HRESULT __stdcall raw_createComment (
        BSTR data,
        struct IXMLDOMComment * * comment ) = 0;
    virtual HRESULT __stdcall raw_createCDATASection (
        BSTR data,
        struct IXMLDOMCDATASection * * cdata ) = 0;
    virtual HRESULT __stdcall raw_createProcessingInstruction (
        BSTR target,
        BSTR data,
        struct IXMLDOMProcessingInstruction * * pi ) = 0;
    virtual HRESULT __stdcall raw_createAttribute (
        BSTR name,
        struct IXMLDOMAttribute * * attribute ) = 0;
    virtual HRESULT __stdcall raw_createEntityReference (
        BSTR name,
        struct IXMLDOMEntityReference * * entityRef ) = 0;
    virtual HRESULT __stdcall raw_getElementsByTagName (
        BSTR tagName,
        struct IXMLDOMNodeList * * resultList ) = 0;
    virtual HRESULT __stdcall raw_createNode (
        VARIANT type,
        BSTR name,
        BSTR namespaceURI,
        struct IXMLDOMNode * * node ) = 0;
    virtual HRESULT __stdcall raw_nodeFromID (
        BSTR idString,
        struct IXMLDOMNode * * node ) = 0;
    virtual HRESULT __stdcall raw_load (
        VARIANT xmlSource,
        VARIANT_BOOL * isSuccessful ) = 0;
    virtual HRESULT __stdcall get_readyState (
        long * value ) = 0;
    virtual HRESULT __stdcall get_parseError (
        struct IXMLDOMParseError * * errorObj ) = 0;
    virtual HRESULT __stdcall get_url (
        BSTR * urlString ) = 0;
    virtual HRESULT __stdcall get_async (
        VARIANT_BOOL * isAsync ) = 0;
    virtual HRESULT __stdcall put_async (
        VARIANT_BOOL isAsync ) = 0;
    virtual HRESULT __stdcall raw_abort ( ) = 0;
    virtual HRESULT __stdcall raw_loadXML (
        BSTR bstrXML,
        VARIANT_BOOL * isSuccessful ) = 0;
    virtual HRESULT __stdcall raw_save (
        VARIANT destination ) = 0;
    virtual HRESULT __stdcall get_validateOnParse (
        VARIANT_BOOL * isValidating ) = 0;
    virtual HRESULT __stdcall put_validateOnParse (
        VARIANT_BOOL isValidating ) = 0;
    virtual HRESULT __stdcall get_resolveExternals (
        VARIANT_BOOL * isResolving ) = 0;
    virtual HRESULT __stdcall put_resolveExternals (
        VARIANT_BOOL isResolving ) = 0;
    virtual HRESULT __stdcall get_preserveWhiteSpace (
        VARIANT_BOOL * isPreserving ) = 0;
    virtual HRESULT __stdcall put_preserveWhiteSpace (
        VARIANT_BOOL isPreserving ) = 0;
    virtual HRESULT __stdcall put_onreadystatechange (
        VARIANT _arg1 ) = 0;
    virtual HRESULT __stdcall put_ondataavailable (
        VARIANT _arg1 ) = 0;
    virtual HRESULT __stdcall put_ontransformnode (
        VARIANT _arg1 ) = 0;
};

struct __declspec(uuid("2933bf8b-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMDocumentType : IXMLDOMNode
{
    //
    // Property data
    //

    __declspec(property(get=Getname))
    _bstr_t name;
    __declspec(property(get=Getentities))
    IXMLDOMNamedNodeMapPtr entities;
    __declspec(property(get=Getnotations))
    IXMLDOMNamedNodeMapPtr notations;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t Getname ( );
    IXMLDOMNamedNodeMapPtr Getentities ( );
    IXMLDOMNamedNodeMapPtr Getnotations ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_name (
        BSTR * rootName ) = 0;
    virtual HRESULT __stdcall get_entities (
        struct IXMLDOMNamedNodeMap * * entityMap ) = 0;
    virtual HRESULT __stdcall get_notations (
        struct IXMLDOMNamedNodeMap * * notationMap ) = 0;
};

struct __declspec(uuid("2933bf86-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMElement : IXMLDOMNode
{
    //
    // Property data
    //

    __declspec(property(get=GettagName))
    _bstr_t tagName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GettagName ( );
    _variant_t getAttribute (
        _bstr_t name );
    HRESULT setAttribute (
        _bstr_t name,
        const _variant_t & value );
    HRESULT removeAttribute (
        _bstr_t name );
    IXMLDOMAttributePtr getAttributeNode (
        _bstr_t name );
    IXMLDOMAttributePtr setAttributeNode (
        struct IXMLDOMAttribute * DOMAttribute );
    IXMLDOMAttributePtr removeAttributeNode (
        struct IXMLDOMAttribute * DOMAttribute );
    IXMLDOMNodeListPtr getElementsByTagName (
        _bstr_t tagName );
    HRESULT normalize ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_tagName (
        BSTR * tagName ) = 0;
    virtual HRESULT __stdcall raw_getAttribute (
        BSTR name,
        VARIANT * value ) = 0;
    virtual HRESULT __stdcall raw_setAttribute (
        BSTR name,
        VARIANT value ) = 0;
    virtual HRESULT __stdcall raw_removeAttribute (
        BSTR name ) = 0;
    virtual HRESULT __stdcall raw_getAttributeNode (
        BSTR name,
        struct IXMLDOMAttribute * * attributeNode ) = 0;
    virtual HRESULT __stdcall raw_setAttributeNode (
        struct IXMLDOMAttribute * DOMAttribute,
        struct IXMLDOMAttribute * * attributeNode ) = 0;
    virtual HRESULT __stdcall raw_removeAttributeNode (
        struct IXMLDOMAttribute * DOMAttribute,
        struct IXMLDOMAttribute * * attributeNode ) = 0;
    virtual HRESULT __stdcall raw_getElementsByTagName (
        BSTR tagName,
        struct IXMLDOMNodeList * * resultList ) = 0;
    virtual HRESULT __stdcall raw_normalize ( ) = 0;
};

struct __declspec(uuid("2933bf85-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMAttribute : IXMLDOMNode
{
    //
    // Property data
    //

    __declspec(property(get=Getname))
    _bstr_t name;
    __declspec(property(get=Getvalue,put=Putvalue))
    _variant_t value;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t Getname ( );
    _variant_t Getvalue ( );
    void Putvalue (
        const _variant_t & attributeValue );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_name (
        BSTR * attributeName ) = 0;
    virtual HRESULT __stdcall get_value (
        VARIANT * attributeValue ) = 0;
    virtual HRESULT __stdcall put_value (
        VARIANT attributeValue ) = 0;
};

struct __declspec(uuid("3efaa413-272f-11d2-836f-0000f87a7782"))
IXMLDOMDocumentFragment : IXMLDOMNode
{};

struct __declspec(uuid("2933bf84-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMCharacterData : IXMLDOMNode
{
    //
    // Property data
    //

    __declspec(property(get=Getdata,put=Putdata))
    _bstr_t data;
    __declspec(property(get=Getlength))
    long length;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t Getdata ( );
    void Putdata (
        _bstr_t data );
    long Getlength ( );
    _bstr_t substringData (
        long offset,
        long count );
    HRESULT appendData (
        _bstr_t data );
    HRESULT insertData (
        long offset,
        _bstr_t data );
    HRESULT deleteData (
        long offset,
        long count );
    HRESULT replaceData (
        long offset,
        long count,
        _bstr_t data );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_data (
        BSTR * data ) = 0;
    virtual HRESULT __stdcall put_data (
        BSTR data ) = 0;
    virtual HRESULT __stdcall get_length (
        long * dataLength ) = 0;
    virtual HRESULT __stdcall raw_substringData (
        long offset,
        long count,
        BSTR * data ) = 0;
    virtual HRESULT __stdcall raw_appendData (
        BSTR data ) = 0;
    virtual HRESULT __stdcall raw_insertData (
        long offset,
        BSTR data ) = 0;
    virtual HRESULT __stdcall raw_deleteData (
        long offset,
        long count ) = 0;
    virtual HRESULT __stdcall raw_replaceData (
        long offset,
        long count,
        BSTR data ) = 0;
};

struct __declspec(uuid("2933bf87-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMText : IXMLDOMCharacterData
{
    //
    // Wrapper methods for error-handling
    //

    IXMLDOMTextPtr splitText (
        long offset );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_splitText (
        long offset,
        struct IXMLDOMText * * rightHandTextNode ) = 0;
};

struct __declspec(uuid("2933bf88-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMComment : IXMLDOMCharacterData
{};

struct __declspec(uuid("2933bf8a-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMCDATASection : IXMLDOMText
{};

struct __declspec(uuid("2933bf89-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMProcessingInstruction : IXMLDOMNode
{
    //
    // Property data
    //

    __declspec(property(get=Getdata,put=Putdata))
    _bstr_t data;
    __declspec(property(get=Gettarget))
    _bstr_t target;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t Gettarget ( );
    _bstr_t Getdata ( );
    void Putdata (
        _bstr_t value );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_target (
        BSTR * name ) = 0;
    virtual HRESULT __stdcall get_data (
        BSTR * value ) = 0;
    virtual HRESULT __stdcall put_data (
        BSTR value ) = 0;
};

struct __declspec(uuid("2933bf8e-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMEntityReference : IXMLDOMNode
{};

struct __declspec(uuid("3efaa426-272f-11d2-836f-0000f87a7782"))
IXMLDOMParseError : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GeterrorCode))
    long errorCode;
    __declspec(property(get=Geturl))
    _bstr_t url;
    __declspec(property(get=Getreason))
    _bstr_t reason;
    __declspec(property(get=GetsrcText))
    _bstr_t srcText;
    __declspec(property(get=Getline))
    long line;
    __declspec(property(get=Getlinepos))
    long linepos;
    __declspec(property(get=Getfilepos))
    long filepos;

    //
    // Wrapper methods for error-handling
    //

    long GeterrorCode ( );
    _bstr_t Geturl ( );
    _bstr_t Getreason ( );
    _bstr_t GetsrcText ( );
    long Getline ( );
    long Getlinepos ( );
    long Getfilepos ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_errorCode (
        long * errorCode ) = 0;
    virtual HRESULT __stdcall get_url (
        BSTR * urlString ) = 0;
    virtual HRESULT __stdcall get_reason (
        BSTR * reasonString ) = 0;
    virtual HRESULT __stdcall get_srcText (
        BSTR * sourceString ) = 0;
    virtual HRESULT __stdcall get_line (
        long * lineNumber ) = 0;
    virtual HRESULT __stdcall get_linepos (
        long * linePosition ) = 0;
    virtual HRESULT __stdcall get_filepos (
        long * filePosition ) = 0;
};

struct __declspec(uuid("2933bf8c-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMNotation : IXMLDOMNode
{
    //
    // Property data
    //

    __declspec(property(get=GetpublicId))
    _variant_t publicId;
    __declspec(property(get=GetsystemId))
    _variant_t systemId;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetpublicId ( );
    _variant_t GetsystemId ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_publicId (
        VARIANT * publicId ) = 0;
    virtual HRESULT __stdcall get_systemId (
        VARIANT * systemId ) = 0;
};

struct __declspec(uuid("2933bf8d-7b36-11d2-b20e-00c04f983e60"))
IXMLDOMEntity : IXMLDOMNode
{
    //
    // Property data
    //

    __declspec(property(get=GetpublicId))
    _variant_t publicId;
    __declspec(property(get=GetsystemId))
    _variant_t systemId;
    __declspec(property(get=GetnotationName))
    _bstr_t notationName;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetpublicId ( );
    _variant_t GetsystemId ( );
    _bstr_t GetnotationName ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_publicId (
        VARIANT * publicId ) = 0;
    virtual HRESULT __stdcall get_systemId (
        VARIANT * systemId ) = 0;
    virtual HRESULT __stdcall get_notationName (
        BSTR * name ) = 0;
};

struct __declspec(uuid("3efaa425-272f-11d2-836f-0000f87a7782"))
IXTLRuntime : IXMLDOMNode
{
    //
    // Wrapper methods for error-handling
    //

    long uniqueID (
        struct IXMLDOMNode * pNode );
    long depth (
        struct IXMLDOMNode * pNode );
    long childNumber (
        struct IXMLDOMNode * pNode );
    long ancestorChildNumber (
        _bstr_t bstrNodeName,
        struct IXMLDOMNode * pNode );
    long absoluteChildNumber (
        struct IXMLDOMNode * pNode );
    _bstr_t formatIndex (
        long lIndex,
        _bstr_t bstrFormat );
    _bstr_t formatNumber (
        double dblNumber,
        _bstr_t bstrFormat );
    _bstr_t formatDate (
        const _variant_t & varDate,
        _bstr_t bstrFormat,
        const _variant_t & varDestLocale = vtMissing );
    _bstr_t formatTime (
        const _variant_t & varTime,
        _bstr_t bstrFormat,
        const _variant_t & varDestLocale = vtMissing );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_uniqueID (
        struct IXMLDOMNode * pNode,
        long * pID ) = 0;
    virtual HRESULT __stdcall raw_depth (
        struct IXMLDOMNode * pNode,
        long * pDepth ) = 0;
    virtual HRESULT __stdcall raw_childNumber (
        struct IXMLDOMNode * pNode,
        long * pNumber ) = 0;
    virtual HRESULT __stdcall raw_ancestorChildNumber (
        BSTR bstrNodeName,
        struct IXMLDOMNode * pNode,
        long * pNumber ) = 0;
    virtual HRESULT __stdcall raw_absoluteChildNumber (
        struct IXMLDOMNode * pNode,
        long * pNumber ) = 0;
    virtual HRESULT __stdcall raw_formatIndex (
        long lIndex,
        BSTR bstrFormat,
        BSTR * pbstrFormattedString ) = 0;
    virtual HRESULT __stdcall raw_formatNumber (
        double dblNumber,
        BSTR bstrFormat,
        BSTR * pbstrFormattedString ) = 0;
    virtual HRESULT __stdcall raw_formatDate (
        VARIANT varDate,
        BSTR bstrFormat,
        VARIANT varDestLocale,
        BSTR * pbstrFormattedString ) = 0;
    virtual HRESULT __stdcall raw_formatTime (
        VARIANT varTime,
        BSTR bstrFormat,
        VARIANT varDestLocale,
        BSTR * pbstrFormattedString ) = 0;
};

struct __declspec(uuid("3efaa427-272f-11d2-836f-0000f87a7782"))
XMLDOMDocumentEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT ondataavailable ( );
    HRESULT onreadystatechange ( );
};

struct __declspec(uuid("2933bf90-7b36-11d2-b20e-00c04f983e60"))
DOMDocument;
    // [ default ] interface IXMLDOMDocument
    // [ default, source ] dispinterface XMLDOMDocumentEvents

struct __declspec(uuid("2933bf91-7b36-11d2-b20e-00c04f983e60"))
DOMFreeThreadedDocument;
    // [ default ] interface IXMLDOMDocument
    // [ default, source ] dispinterface XMLDOMDocumentEvents

struct __declspec(uuid("ed8c108d-4349-11d2-91a4-00c04f7969e8"))
IXMLHttpRequest : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getstatus))
    long status;
    __declspec(property(get=GetstatusText))
    _bstr_t statusText;
    __declspec(property(get=GetresponseXML))
    IDispatchPtr responseXML;
    __declspec(property(get=GetresponseText))
    _bstr_t responseText;
    __declspec(property(get=GetresponseBody))
    _variant_t responseBody;
    __declspec(property(get=GetresponseStream))
    _variant_t responseStream;
    __declspec(property(get=GetreadyState))
    long readyState;
    __declspec(property(put=Putonreadystatechange))
    IDispatchPtr onreadystatechange;

    //
    // Wrapper methods for error-handling
    //

    HRESULT open (
        _bstr_t bstrMethod,
        _bstr_t bstrUrl,
        const _variant_t & varAsync = vtMissing,
        const _variant_t & bstrUser = vtMissing,
        const _variant_t & bstrPassword = vtMissing );
    HRESULT setRequestHeader (
        _bstr_t bstrHeader,
        _bstr_t bstrValue );
    _bstr_t getResponseHeader (
        _bstr_t bstrHeader );
    _bstr_t getAllResponseHeaders ( );
    HRESULT send (
        const _variant_t & varBody = vtMissing );
    HRESULT abort ( );
    long Getstatus ( );
    _bstr_t GetstatusText ( );
    IDispatchPtr GetresponseXML ( );
    _bstr_t GetresponseText ( );
    _variant_t GetresponseBody ( );
    _variant_t GetresponseStream ( );
    long GetreadyState ( );
    void Putonreadystatechange (
        IDispatch * _arg1 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_open (
        BSTR bstrMethod,
        BSTR bstrUrl,
        VARIANT varAsync = vtMissing,
        VARIANT bstrUser = vtMissing,
        VARIANT bstrPassword = vtMissing ) = 0;
    virtual HRESULT __stdcall raw_setRequestHeader (
        BSTR bstrHeader,
        BSTR bstrValue ) = 0;
    virtual HRESULT __stdcall raw_getResponseHeader (
        BSTR bstrHeader,
        BSTR * pbstrValue ) = 0;
    virtual HRESULT __stdcall raw_getAllResponseHeaders (
        BSTR * pbstrHeaders ) = 0;
    virtual HRESULT __stdcall raw_send (
        VARIANT varBody = vtMissing ) = 0;
    virtual HRESULT __stdcall raw_abort ( ) = 0;
    virtual HRESULT __stdcall get_status (
        long * plStatus ) = 0;
    virtual HRESULT __stdcall get_statusText (
        BSTR * pbstrStatus ) = 0;
    virtual HRESULT __stdcall get_responseXML (
        IDispatch * * ppBody ) = 0;
    virtual HRESULT __stdcall get_responseText (
        BSTR * pbstrBody ) = 0;
    virtual HRESULT __stdcall get_responseBody (
        VARIANT * pvarBody ) = 0;
    virtual HRESULT __stdcall get_responseStream (
        VARIANT * pvarBody ) = 0;
    virtual HRESULT __stdcall get_readyState (
        long * plState ) = 0;
    virtual HRESULT __stdcall put_onreadystatechange (
        IDispatch * _arg1 ) = 0;
};

struct __declspec(uuid("ed8c108e-4349-11d2-91a4-00c04f7969e8"))
XMLHTTPRequest;
    // [ default ] interface IXMLHttpRequest

struct __declspec(uuid("310afa62-0575-11d2-9ca9-0060b0ec3d39"))
IXMLDSOControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetXMLDocument,put=PutXMLDocument))
    IXMLDOMDocumentPtr XMLDocument;
    __declspec(property(get=GetJavaDSOCompatible,put=PutJavaDSOCompatible))
    long JavaDSOCompatible;
    __declspec(property(get=GetreadyState))
    long readyState;

    //
    // Wrapper methods for error-handling
    //

    IXMLDOMDocumentPtr GetXMLDocument ( );
    void PutXMLDocument (
        struct IXMLDOMDocument * ppDoc );
    long GetJavaDSOCompatible ( );
    void PutJavaDSOCompatible (
        long fJavaDSOCompatible );
    long GetreadyState ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_XMLDocument (
        struct IXMLDOMDocument * * ppDoc ) = 0;
    virtual HRESULT __stdcall put_XMLDocument (
        struct IXMLDOMDocument * ppDoc ) = 0;
    virtual HRESULT __stdcall get_JavaDSOCompatible (
        long * fJavaDSOCompatible ) = 0;
    virtual HRESULT __stdcall put_JavaDSOCompatible (
        long fJavaDSOCompatible ) = 0;
    virtual HRESULT __stdcall get_readyState (
        long * state ) = 0;
};

struct __declspec(uuid("550dda30-0541-11d2-9ca9-0060b0ec3d39"))
XMLDSOControl;
    // [ default ] interface IXMLDSOControl

struct __declspec(uuid("65725580-9b5d-11d0-9bfe-00c04fc99c8e"))
IXMLElementCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getlength,put=Putlength))
    long length;
    __declspec(property(get=Get_newEnum))
    IUnknownPtr _newEnum;

    //
    // Wrapper methods for error-handling
    //

    void Putlength (
        long p );
    long Getlength ( );
    IUnknownPtr Get_newEnum ( );
    IDispatchPtr item (
        const _variant_t & var1 = vtMissing,
        const _variant_t & var2 = vtMissing );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_length (
        long p ) = 0;
    virtual HRESULT __stdcall get_length (
        long * p ) = 0;
    virtual HRESULT __stdcall get__newEnum (
        IUnknown * * ppUnk ) = 0;
    virtual HRESULT __stdcall raw_item (
        VARIANT var1,
        VARIANT var2,
        IDispatch * * ppDisp ) = 0;
};

struct __declspec(uuid("f52e2b61-18a1-11d1-b105-00805f49916b"))
IXMLDocument : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getroot))
    IXMLElementPtr root;
    __declspec(property(get=GetfileSize))
    _bstr_t fileSize;
    __declspec(property(get=GetfileModifiedDate))
    _bstr_t fileModifiedDate;
    __declspec(property(get=GetfileUpdatedDate))
    _bstr_t fileUpdatedDate;
    __declspec(property(get=Geturl,put=Puturl))
    _bstr_t url;
    __declspec(property(get=GetmimeType))
    _bstr_t mimeType;
    __declspec(property(get=GetreadyState))
    long readyState;
    __declspec(property(get=Getcharset,put=Putcharset))
    _bstr_t charset;
    __declspec(property(get=Getversion))
    _bstr_t version;
    __declspec(property(get=Getdoctype))
    _bstr_t doctype;
    __declspec(property(get=GetdtdURL))
    _bstr_t dtdURL;

    //
    // Wrapper methods for error-handling
    //

    IXMLElementPtr Getroot ( );
    _bstr_t GetfileSize ( );
    _bstr_t GetfileModifiedDate ( );
    _bstr_t GetfileUpdatedDate ( );
    _bstr_t Geturl ( );
    void Puturl (
        _bstr_t p );
    _bstr_t GetmimeType ( );
    long GetreadyState ( );
    _bstr_t Getcharset ( );
    void Putcharset (
        _bstr_t p );
    _bstr_t Getversion ( );
    _bstr_t Getdoctype ( );
    _bstr_t GetdtdURL ( );
    IXMLElementPtr createElement (
        const _variant_t & vType,
        const _variant_t & var1 = vtMissing );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_root (
        struct IXMLElement * * p ) = 0;
    virtual HRESULT __stdcall get_fileSize (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall get_fileModifiedDate (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall get_fileUpdatedDate (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall get_url (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall put_url (
        BSTR p ) = 0;
    virtual HRESULT __stdcall get_mimeType (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall get_readyState (
        long * pl ) = 0;
    virtual HRESULT __stdcall get_charset (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall put_charset (
        BSTR p ) = 0;
    virtual HRESULT __stdcall get_version (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall get_doctype (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall get_dtdURL (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall raw_createElement (
        VARIANT vType,
        VARIANT var1,
        struct IXMLElement * * ppElem ) = 0;
};

struct __declspec(uuid("3f7f31ac-e15f-11d0-9c25-00c04fc99c8e"))
IXMLElement : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GettagName,put=PuttagName))
    _bstr_t tagName;
    __declspec(property(get=Getparent))
    IXMLElementPtr parent;
    __declspec(property(get=Getchildren))
    IXMLElementCollectionPtr children;
    __declspec(property(get=Gettype))
    long type;
    __declspec(property(get=Gettext,put=Puttext))
    _bstr_t text;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GettagName ( );
    void PuttagName (
        _bstr_t p );
    IXMLElementPtr Getparent ( );
    HRESULT setAttribute (
        _bstr_t strPropertyName,
        const _variant_t & PropertyValue );
    _variant_t getAttribute (
        _bstr_t strPropertyName );
    HRESULT removeAttribute (
        _bstr_t strPropertyName );
    IXMLElementCollectionPtr Getchildren ( );
    long Gettype ( );
    _bstr_t Gettext ( );
    void Puttext (
        _bstr_t p );
    HRESULT addChild (
        struct IXMLElement * pChildElem,
        long lIndex,
        long lReserved );
    HRESULT removeChild (
        struct IXMLElement * pChildElem );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_tagName (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall put_tagName (
        BSTR p ) = 0;
    virtual HRESULT __stdcall get_parent (
        struct IXMLElement * * ppParent ) = 0;
    virtual HRESULT __stdcall raw_setAttribute (
        BSTR strPropertyName,
        VARIANT PropertyValue ) = 0;
    virtual HRESULT __stdcall raw_getAttribute (
        BSTR strPropertyName,
        VARIANT * PropertyValue ) = 0;
    virtual HRESULT __stdcall raw_removeAttribute (
        BSTR strPropertyName ) = 0;
    virtual HRESULT __stdcall get_children (
        struct IXMLElementCollection * * pp ) = 0;
    virtual HRESULT __stdcall get_type (
        long * plType ) = 0;
    virtual HRESULT __stdcall get_text (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall put_text (
        BSTR p ) = 0;
    virtual HRESULT __stdcall raw_addChild (
        struct IXMLElement * pChildElem,
        long lIndex,
        long lReserved ) = 0;
    virtual HRESULT __stdcall raw_removeChild (
        struct IXMLElement * pChildElem ) = 0;
};

struct __declspec(uuid("2b8de2fe-8d2d-11d1-b2fc-00c04fd915a9"))
IXMLDocument2 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getroot))
    IXMLElement2Ptr root;
    __declspec(property(get=GetfileSize))
    _bstr_t fileSize;
    __declspec(property(get=GetfileModifiedDate))
    _bstr_t fileModifiedDate;
    __declspec(property(get=GetfileUpdatedDate))
    _bstr_t fileUpdatedDate;
    __declspec(property(get=Geturl,put=Puturl))
    _bstr_t url;
    __declspec(property(get=GetmimeType))
    _bstr_t mimeType;
    __declspec(property(get=GetreadyState))
    long readyState;
    __declspec(property(get=Getcharset,put=Putcharset))
    _bstr_t charset;
    __declspec(property(get=Getversion))
    _bstr_t version;
    __declspec(property(get=Getdoctype))
    _bstr_t doctype;
    __declspec(property(get=GetdtdURL))
    _bstr_t dtdURL;
    __declspec(property(get=Getasync,put=Putasync))
    VARIANT_BOOL async;

    //
    // Wrapper methods for error-handling
    //

    IXMLElement2Ptr Getroot ( );
    _bstr_t GetfileSize ( );
    _bstr_t GetfileModifiedDate ( );
    _bstr_t GetfileUpdatedDate ( );
    _bstr_t Geturl ( );
    void Puturl (
        _bstr_t p );
    _bstr_t GetmimeType ( );
    long GetreadyState ( );
    _bstr_t Getcharset ( );
    void Putcharset (
        _bstr_t p );
    _bstr_t Getversion ( );
    _bstr_t Getdoctype ( );
    _bstr_t GetdtdURL ( );
    IXMLElement2Ptr createElement (
        const _variant_t & vType,
        const _variant_t & var1 = vtMissing );
    VARIANT_BOOL Getasync ( );
    void Putasync (
        VARIANT_BOOL pf );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_root (
        struct IXMLElement2 * * p ) = 0;
    virtual HRESULT __stdcall get_fileSize (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall get_fileModifiedDate (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall get_fileUpdatedDate (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall get_url (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall put_url (
        BSTR p ) = 0;
    virtual HRESULT __stdcall get_mimeType (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall get_readyState (
        long * pl ) = 0;
    virtual HRESULT __stdcall get_charset (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall put_charset (
        BSTR p ) = 0;
    virtual HRESULT __stdcall get_version (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall get_doctype (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall get_dtdURL (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall raw_createElement (
        VARIANT vType,
        VARIANT var1,
        struct IXMLElement2 * * ppElem ) = 0;
    virtual HRESULT __stdcall get_async (
        VARIANT_BOOL * pf ) = 0;
    virtual HRESULT __stdcall put_async (
        VARIANT_BOOL pf ) = 0;
};

struct __declspec(uuid("2b8de2ff-8d2d-11d1-b2fc-00c04fd915a9"))
IXMLElement2 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GettagName,put=PuttagName))
    _bstr_t tagName;
    __declspec(property(get=Getparent))
    IXMLElement2Ptr parent;
    __declspec(property(get=Getchildren))
    IXMLElementCollectionPtr children;
    __declspec(property(get=Gettype))
    long type;
    __declspec(property(get=Gettext,put=Puttext))
    _bstr_t text;
    __declspec(property(get=Getattributes))
    IXMLElementCollectionPtr attributes;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GettagName ( );
    void PuttagName (
        _bstr_t p );
    IXMLElement2Ptr Getparent ( );
    HRESULT setAttribute (
        _bstr_t strPropertyName,
        const _variant_t & PropertyValue );
    _variant_t getAttribute (
        _bstr_t strPropertyName );
    HRESULT removeAttribute (
        _bstr_t strPropertyName );
    IXMLElementCollectionPtr Getchildren ( );
    long Gettype ( );
    _bstr_t Gettext ( );
    void Puttext (
        _bstr_t p );
    HRESULT addChild (
        struct IXMLElement2 * pChildElem,
        long lIndex,
        long lReserved );
    HRESULT removeChild (
        struct IXMLElement2 * pChildElem );
    IXMLElementCollectionPtr Getattributes ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_tagName (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall put_tagName (
        BSTR p ) = 0;
    virtual HRESULT __stdcall get_parent (
        struct IXMLElement2 * * ppParent ) = 0;
    virtual HRESULT __stdcall raw_setAttribute (
        BSTR strPropertyName,
        VARIANT PropertyValue ) = 0;
    virtual HRESULT __stdcall raw_getAttribute (
        BSTR strPropertyName,
        VARIANT * PropertyValue ) = 0;
    virtual HRESULT __stdcall raw_removeAttribute (
        BSTR strPropertyName ) = 0;
    virtual HRESULT __stdcall get_children (
        struct IXMLElementCollection * * pp ) = 0;
    virtual HRESULT __stdcall get_type (
        long * plType ) = 0;
    virtual HRESULT __stdcall get_text (
        BSTR * p ) = 0;
    virtual HRESULT __stdcall put_text (
        BSTR p ) = 0;
    virtual HRESULT __stdcall raw_addChild (
        struct IXMLElement2 * pChildElem,
        long lIndex,
        long lReserved ) = 0;
    virtual HRESULT __stdcall raw_removeChild (
        struct IXMLElement2 * pChildElem ) = 0;
    virtual HRESULT __stdcall get_attributes (
        struct IXMLElementCollection * * pp ) = 0;
};

struct __declspec(uuid("d4d4a0fc-3b73-11d1-b2b4-00c04fb92596"))
IXMLAttribute : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getname))
    _bstr_t name;
    __declspec(property(get=Getvalue))
    _bstr_t value;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t Getname ( );
    _bstr_t Getvalue ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_name (
        BSTR * n ) = 0;
    virtual HRESULT __stdcall get_value (
        BSTR * v ) = 0;
};

struct __declspec(uuid("948c5ad3-c58d-11d0-9c0b-00c04fc99c8e"))
IXMLError : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT GetErrorInfo (
        struct _xml_error * pErrorReturn );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_GetErrorInfo (
        struct _xml_error * pErrorReturn ) = 0;
};

struct _xml_error
{
    unsigned int _nLine;
    BSTR _pchBuf;
    unsigned int _cchBuf;
    unsigned int _ich;
    BSTR _pszFound;
    BSTR _pszExpected;
    unsigned long _reserved1;
    unsigned long _reserved2;
};

enum tagXMLEMEM_TYPE
{
    XMLELEMTYPE_ELEMENT = 0,
    XMLELEMTYPE_TEXT = 1,
    XMLELEMTYPE_COMMENT = 2,
    XMLELEMTYPE_DOCUMENT = 3,
    XMLELEMTYPE_DTD = 4,
    XMLELEMTYPE_PI = 5,
    XMLELEMTYPE_OTHER = 6
};

struct __declspec(uuid("cfc399af-d876-11d0-9c10-00c04fc99c8e"))
XMLDocument;
    // [ default ] interface IXMLDocument2

//
// Wrapper method implementations
//

#include "msxml.tli"

} // namespace MSXML

#pragma pack(pop)
